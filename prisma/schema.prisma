// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Team {
  A
  B
  C
  D
}

model User {
  id          Int      @id @default(autoincrement())
  firstname   String
  lastname    String
  phoneNumber String?  @unique
  email       String?  @unique
  password    String
  profileImg  String?
  coverImg    String?
  isAdmin     Boolean  @default(false)
  isVip       Boolean  @default(false)
  date        DateTime @default(now())
  team        String?
  // Post        Post[]
  // Comment     Comment[]
}

model News {
  id      Int      @id @default(autoincrement())
  title   String
  team    String?
  content String   @db.LongText
  heroImg String?
  date    DateTime @default(now())
}

// model Post {
//   id          Int       @id @default(autoincrement())
//   userMessage String?
//   userImg     String?
//   date        DateTime  @default(now())
//   user        User      @relation(fields: [userId], references: [id])
//   userId      Int
//   Comment     Comment[]
// }

// model Comment {
//   id             Int      @id @default(autoincrement())
//   commentMessage String?
//   commentImg     String?
//   date           DateTime @default(now())
//   user           User     @relation(fields: [userId], references: [id])
//   post           Post     @relation(fields: [postId], references: [id])
//   userId         Int
//   postId         Int
// }

model Teams {
  id       Int      @id @default(autoincrement())
  rank     Int
  team     String
  logoTeam String
  played   Int
  win      Int
  draw     Int
  lose     Int
  points   Int
  GF       Int
  GA       Int
  GD       Int
  form     String
  update   DateTime @default(now())
  // homeMatches Match[] @relation("homeId")
  // awayMatches Match[] @relation("awayId")
}

model Match {
  id        Int    @id @default(autoincrement())
  home      String
  away      String
  homeLogo  String
  awayLogo  String
  season    Int
  rounded   String
  homeScore Int?
  awayScore Int?
  fullDate  String
  date      String
  time      String
  status    String

  // homeTeam Teams @relation("homeId", fields: [homeTeamId], references: [id])
  // awayTeam Teams @relation("awayId", fields: [awayTeamId], references: [id])
  // homeTeamId Int
  // awayTeamId Int
}


model Videos{
  id Int @id @default(autoincrement())
  name String
  video String
  date DateTime @default(now())
}